var Regarding_value = assertUriChildAsFunctionalProperty(Regarding, 'value');
var Regarding_aspect = assertUriChildAsFunctionalProperty(Regarding, 'aspect');
var Sort_constructor = assertUriChildAsFunctionalProperty(fablType, 'constructor');
var Sort_param = assertUriChildAsFunctionalProperty(fablType, 'param');
var Sort_params = assertUriChildAsFunctionalProperty(fablType, 'params');
var Sort_properties = assertUriChildAsFunctionalProperty(fablType, 'properties');
var Sort_prototype = assertUriChildAsFunctionalProperty(fablType, 'prototype');
var Sort_booles = assertUriChildAsFunctionalProperty(fablType, 'booles');
var Binding_value = assertUriChildAsFunctionalProperty(Binding, 'value');
var Binding_type = assertUriChildAsFunctionalProperty(Binding, 'type');
var Binding_key = assertUriChildAsFunctionalProperty(Binding, 'key');
var Xob1_type = assertUriChildAsFunctionalProperty(Xob1, 'type');
var Xob1_name = assertUriChildAsFunctionalProperty(Xob1, 'name');
var Xob1_parent = assertUriChildAsFunctionalProperty(Xob1, 'parent');
var Xob1_value = assertUriChildAsFunctionalProperty(Xob1, 'value');
var Xob1_booles = assertUriChildAsFunctionalProperty(Xob1, 'booles');
var Function_name = assertUriChildAsFunctionalProperty(Function, 'name');
var Function_definedIn = assertUriChildAsFunctionalProperty(Function, 'definedIn');
var Function_type = assertUriChildAsFunctionalProperty(Function, 'type');
var Function_implementation = assertUriChildAsFunctionalProperty(Function, 'implementation');
var Function_cimp = assertUriChildAsFunctionalProperty(Function, 'cimp');
var Function_booles = assertUriChildAsFunctionalProperty(Function, 'booles');
var Xapply_dest = assertUriChildAsFunctionalProperty(Xapply, 'dest');
var Xapply_functionOf = assertUriChildAsFunctionalProperty(Xapply, 'functionOf');
var Xapply_arguments = assertUriChildAsFunctionalProperty(Xapply, 'arguments');
var Xapply_booles = assertUriChildAsFunctionalProperty(Xapply, 'booles');
var Xsequence_dest = assertUriChildAsFunctionalProperty(Xsequence, 'dest');
var Xsequence_elementType = assertUriChildAsFunctionalProperty(Xsequence, 'elementType');
var Xsequence_arguments = assertUriChildAsFunctionalProperty(Xsequence, 'arguments');
var Xsequence_booles = assertUriChildAsFunctionalProperty(Xsequence, 'booles');
var Xcast_castee = assertUriChildAsFunctionalProperty(Xcast, 'castee');
var Xcast_booles = assertUriChildAsFunctionalProperty(Xcast, 'booles');
var XselectProperty_source = assertUriChildAsFunctionalProperty(XselectProperty, 'source');
var XselectProperty_selector = assertUriChildAsFunctionalProperty(XselectProperty, 'selector');
var XselectProperty_booles = assertUriChildAsFunctionalProperty(XselectProperty, 'booles');
var XselectIndex_source = assertUriChildAsFunctionalProperty(XselectIndex, 'source');
var XselectIndex_selector = assertUriChildAsFunctionalProperty(XselectIndex, 'selector');
var XselectIndex_booles = assertUriChildAsFunctionalProperty(XselectIndex, 'booles');
var Xassign_source = assertUriChildAsFunctionalProperty(Xassign, 'source');
var Xassign_dest = assertUriChildAsFunctionalProperty(Xassign, 'dest');
var Xassign_booles = assertUriChildAsFunctionalProperty(Xassign, 'booles');
var Xfor_init = assertUriChildAsFunctionalProperty(Xfor, 'init');
var Xfor_test = assertUriChildAsFunctionalProperty(Xfor, 'test');
var Xfor_incr = assertUriChildAsFunctionalProperty(Xfor, 'incr');
var Xfor_body = assertUriChildAsFunctionalProperty(Xfor, 'body');
var Xfor_booles = assertUriChildAsFunctionalProperty(Xfor, 'booles');
var Xwhile_test = assertUriChildAsFunctionalProperty(Xwhile, 'test');
var Xwhile_incr = assertUriChildAsFunctionalProperty(Xwhile, 'incr');
var Xwhile_body = assertUriChildAsFunctionalProperty(Xwhile, 'body');
var Xwhile_booles = assertUriChildAsFunctionalProperty(Xwhile, 'booles');
var Xreturn_value = assertUriChildAsFunctionalProperty(Xreturn, 'value');
var Xreturn_target = assertUriChildAsFunctionalProperty(Xreturn, 'target');
var Xreturn_booles = assertUriChildAsFunctionalProperty(Xreturn, 'booles');
var Xblock_returnType = assertUriChildAsFunctionalProperty(Xblock, 'returnType');
var Xblock_locals = assertUriChildAsFunctionalProperty(Xblock, 'locals');
var Xblock_statements = assertUriChildAsFunctionalProperty(Xblock, 'statements');
var Xblock_booles = assertUriChildAsFunctionalProperty(Xblock, 'booles');
var Xgo_condition = assertUriChildAsFunctionalProperty(Xgo, 'condition');
var Xgo_toLabel = assertUriChildAsFunctionalProperty(Xgo, 'toLabel');
var Xgo_booles = assertUriChildAsFunctionalProperty(Xgo, 'booles');
var Xif_condition = assertUriChildAsFunctionalProperty(Xif, 'condition');
var Xif_ifTrue = assertUriChildAsFunctionalProperty(Xif, 'ifTrue');
var Xif_ifFalse = assertUriChildAsFunctionalProperty(Xif, 'ifFalse');
var Xif_booles = assertUriChildAsFunctionalProperty(Xif, 'booles');
var DblockLayout_numobs = assertUriChildAsFunctionalProperty(DblockLayout, 'numobs');
var DblockLayout_numints = assertUriChildAsFunctionalProperty(DblockLayout, 'numints');
var DblockLayout_doubleoffset = assertUriChildAsFunctionalProperty(DblockLayout, 'doubleoffset');
var DblockLayout_numdoubles = assertUriChildAsFunctionalProperty(DblockLayout, 'numdoubles');
var DblockLayout_booles = assertUriChildAsFunctionalProperty(DblockLayout, 'booles');
var Pcode_code = assertUriChildAsFunctionalProperty(Pcode, 'code');
var Pcode_dblock = assertUriChildAsFunctionalProperty(Pcode, 'dblock');
var Pcode_dblockPool = assertUriChildAsFunctionalProperty(Pcode, 'dblockPool');
var Pcode_booles = assertUriChildAsFunctionalProperty(Pcode, 'booles');
var PcodeArg_kind = assertUriChildAsFunctionalProperty(PcodeArg, 'kind');
var PcodeArg_dblockStorage = assertUriChildAsFunctionalProperty(PcodeArg, 'dblockStorage');
var PcodeArg_dblockIndex = assertUriChildAsFunctionalProperty(PcodeArg, 'dblockIndex');
var PcodeArg_selectionIndex = assertUriChildAsFunctionalProperty(PcodeArg, 'selectionIndex');
var PcodeArg_pcodePos = assertUriChildAsFunctionalProperty(PcodeArg, 'pcodePos');
var PcodeArg_pcodeLength = assertUriChildAsFunctionalProperty(PcodeArg, 'pcodeLength');
var PcodeArg_booles = assertUriChildAsFunctionalProperty(PcodeArg, 'booles');
var TempStackMark_obIndex = assertUriChildAsFunctionalProperty(TempStackMark, 'obIndex');
var TempStackMark_intIndex = assertUriChildAsFunctionalProperty(TempStackMark, 'intIndex');
var TempStackMark_doubleIndex = assertUriChildAsFunctionalProperty(TempStackMark, 'doubleIndex');
var Token_datum = assertUriChildAsFunctionalProperty(Token, 'datum');
var Token_position = assertUriChildAsFunctionalProperty(Token, 'position');
var Token_booles = assertUriChildAsFunctionalProperty(Token, 'booles');
var Xob1_labels = selectUri(Xob1, 'labels');
var Xob1_isNoop = 1;
var Xob1_isConstant = 0;
var XselectProperty_isBitField = 0;
var XselectProperty_isFunctional = 1;
var Xreturn_blockReturn = 0;
var Xreturn_loopBreak = 1;
var Xreturn_loopContinue = 2;
var Xgo_goIfFalse = 0;
var Xblock_isFunctionBody = 0;
var Xassign_addValue = 0;
var Token_isInfix = 0;
var Token_isPrefix = 1;
var Token_isPostfix = 2;
var Token_isTerminator = 3;
var Token_isOperator = 4;
var Token_isAtom = 5;
var Token_isKeyword = 6;
var Token_isNumber = 7;
var Token_isString = 8;
var Token_isId = 9;
